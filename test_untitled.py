# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service


class TestUntitled:
    def setup_method(self, method):
        chrome_testing_path = r"D:\Develop\DevelopTools\chrome-win64\chrome.exe"
        chromedriver_path = r"D:\Develop\DevelopTools\chrome-win64\chromedriver.exe"
        options = webdriver.ChromeOptions()
        options.binary_location = chrome_testing_path
        options.add_experimental_option("detach", True)
        service = Service(chromedriver_path)
        self.driver = webdriver.Chrome(service=service, options=options)
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_1(self):
        # Test name: 1
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("https://www.baidu.com/")
        # 2 | setWindowSize | 1318x1013 |
        self.driver.set_window_size(1318, 1013)
        # 3 | click | id=kw |
        self.driver.find_element(By.ID, "kw").click()
        # 4 | type | id=kw | 1111
        self.driver.find_element(By.ID, "kw").send_keys("1111")
        # 5 | click | id=su |
        self.driver.find_element(By.ID, "su").click()
        # 6 | mouseOver | linkText=更多 |
        element = self.driver.find_element(By.LINK_TEXT, "更多")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()

    def test_2(self):
        # Test name: 2
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("https://www.baidu.com/")
        # 2 | setWindowSize | 1318x1013 |
        self.driver.set_window_size(1318, 1013)
        # 3 | click | css=.hotsearch-item:nth-child(1) .title-content-title |
        self.vars["window_handles"] = self.driver.window_handles
        # 4 | selectWindow | handle=${win4315} |
        self.driver.find_element(
            By.CSS_SELECTOR, ".hotsearch-item:nth-child(1) .title-content-title"
        ).click()
        self.vars["win4315"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win4315"])
